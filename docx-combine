#!/usr/bin/env python

from __future__ import print_function
import docx, argparse

__version__ = '0.2.4'

parser = argparse.ArgumentParser(description='Combine tool for DOCX')
parser.add_argument('--version', '-V', action='version', version='%(prog)s ' + __version__)
parser.add_argument('main', nargs=1, help='main docx files')
parser.add_argument('--before', '-b', nargs='*', help='docx files inserted before main file content')
parser.add_argument('--after', '-a', nargs='*', help='docx files inserted after main file content')
parser.add_argument('--output', '-o', nargs=1, help='output file', required=True)
parser.add_argument('--page-break', '-p', action='store_true', help='insert page breaks between parts')
parser.add_argument('--no-skip-sectpr', action='store_true', help='do not skip SectPr: header and footer')
args = parser.parse_args()

main_doc = docx.Document(args.main[0])
before_docs = [docx.Document(doc) for doc in args.before] if args.before else []
after_docs = [docx.Document(doc) for doc in args.after] if args.after else []

if args.page_break and len(after_docs) != 0:
    main_doc.add_page_break()
    for i in range(len(after_docs) - 1):
        after_docs[i].add_page_break()

for doc in after_docs:
    for element in doc.element.body:
        if not args.no_skip_sectpr and isinstance(element, docx.oxml.section.CT_SectPr):
            continue
        main_doc.element.body.append(element)

i = 0
for doc in before_docs:
    if args.page_break:
        doc.add_page_break()
    for element in doc.element.body:
        if not args.no_skip_sectpr and isinstance(element, docx.oxml.section.CT_SectPr):
            continue
        main_doc.element.body.insert(i, element)
        i += 1

main_doc.save(args.output[0])
