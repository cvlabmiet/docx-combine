#!/usr/bin/env python

from __future__ import print_function
import docx, sys, argparse

parser = argparse.ArgumentParser(description='Combine tool for DOCX')
parser.add_argument('main', nargs=1, help='main docx files')
parser.add_argument('--before', '-b', nargs='*', help='docx files inserted before main file content')
parser.add_argument('--after', '-a', nargs='*', help='docx files inserted after main file content')
parser.add_argument('--output', '-o', nargs=1, help='output file', required=True)
parser.add_argument('--page-break', '-p', action='store_true', help='insert page breaks between parts')
args = parser.parse_args()

main_doc = docx.Document(args.main[0])
before_docs = [docx.Document(doc) for doc in args.before] if args.before else []
after_docs = [docx.Document(doc) for doc in args.after] if args.after else []

i = 0
for doc in before_docs:
    if args.page_break:
        doc.add_page_break()
    for element in doc.element.body:
        main_doc.element.body.insert(i, element)
        i += 1

if args.page_break and len(after_docs) != 0:
    main_doc.add_page_break()

for doc in after_docs:
    for element in doc.element.body:
        main_doc.element.body.append(element)

main_doc.save(args.output[0])
